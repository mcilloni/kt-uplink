// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.github.mcilloni.uplink.nano;

@SuppressWarnings("hiding")
public interface UplinkProto {

  public static final class Empty extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Empty[] _emptyArray;
    public static Empty[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Empty[0];
          }
        }
      }
      return _emptyArray;
    }

    public Empty() {
      clear();
    }

    public Empty clear() {
      cachedSize = -1;
      return this;
    }

    @Override
    public Empty mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
        }
      }
    }

    public static Empty parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Empty(), data);
    }

    public static Empty parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Empty().mergeFrom(input);
    }
  }

  public static final class BoolResp extends
      com.google.protobuf.nano.MessageNano {

    private static volatile BoolResp[] _emptyArray;
    public static BoolResp[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new BoolResp[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional bool success = 1;
    public boolean success;

    public BoolResp() {
      clear();
    }

    public BoolResp clear() {
      success = false;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.success != false) {
        output.writeBool(1, this.success);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.success != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(1, this.success);
      }
      return size;
    }

    @Override
    public BoolResp mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.success = input.readBool();
            break;
          }
        }
      }
    }

    public static BoolResp parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new BoolResp(), data);
    }

    public static BoolResp parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new BoolResp().mergeFrom(input);
    }
  }

  public static final class Name extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Name[] _emptyArray;
    public static Name[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Name[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string name = 1;
    public java.lang.String name;

    public Name() {
      clear();
    }

    public Name clear() {
      name = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.name.equals("")) {
        output.writeString(1, this.name);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.name.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.name);
      }
      return size;
    }

    @Override
    public Name mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.name = input.readString();
            break;
          }
        }
      }
    }

    public static Name parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Name(), data);
    }

    public static Name parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Name().mergeFrom(input);
    }
  }

  public static final class ID extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ID[] _emptyArray;
    public static ID[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ID[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int64 id = 1;
    public long id;

    public ID() {
      clear();
    }

    public ID clear() {
      id = 0L;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.id != 0L) {
        output.writeInt64(1, this.id);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.id != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(1, this.id);
      }
      return size;
    }

    @Override
    public ID mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.id = input.readInt64();
            break;
          }
        }
      }
    }

    public static ID parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ID(), data);
    }

    public static ID parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ID().mergeFrom(input);
    }
  }

  public static final class AuthInfo extends
      com.google.protobuf.nano.MessageNano {

    private static volatile AuthInfo[] _emptyArray;
    public static AuthInfo[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new AuthInfo[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string name = 1;
    public java.lang.String name;

    // optional string pass = 2;
    public java.lang.String pass;

    public AuthInfo() {
      clear();
    }

    public AuthInfo clear() {
      name = "";
      pass = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.name.equals("")) {
        output.writeString(1, this.name);
      }
      if (!this.pass.equals("")) {
        output.writeString(2, this.pass);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.name.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.name);
      }
      if (!this.pass.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.pass);
      }
      return size;
    }

    @Override
    public AuthInfo mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.name = input.readString();
            break;
          }
          case 18: {
            this.pass = input.readString();
            break;
          }
        }
      }
    }

    public static AuthInfo parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new AuthInfo(), data);
    }

    public static AuthInfo parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new AuthInfo().mergeFrom(input);
    }
  }

  public static final class SessInfo extends
      com.google.protobuf.nano.MessageNano {

    private static volatile SessInfo[] _emptyArray;
    public static SessInfo[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new SessInfo[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int64 uid = 1;
    public long uid;

    // optional string session_id = 2;
    public java.lang.String sessionId;

    public SessInfo() {
      clear();
    }

    public SessInfo clear() {
      uid = 0L;
      sessionId = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.uid != 0L) {
        output.writeInt64(1, this.uid);
      }
      if (!this.sessionId.equals("")) {
        output.writeString(2, this.sessionId);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.uid != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(1, this.uid);
      }
      if (!this.sessionId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.sessionId);
      }
      return size;
    }

    @Override
    public SessInfo mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.uid = input.readInt64();
            break;
          }
          case 18: {
            this.sessionId = input.readString();
            break;
          }
        }
      }
    }

    public static SessInfo parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new SessInfo(), data);
    }

    public static SessInfo parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new SessInfo().mergeFrom(input);
    }
  }

  public static final class Notification extends
      com.google.protobuf.nano.MessageNano {

    // enum Type
    public static final int MESSAGE = 0;
    public static final int FRIENDSHIP_REQ = 1;
    public static final int FRIENDSHIP_ACC = 2;
    public static final int JOIN_REQ = 3;
    public static final int JOIN_ACC = 4;
    public static final int HANDLER_READY = 5;

    private static volatile Notification[] _emptyArray;
    public static Notification[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Notification[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional .protodef.Notification.Type type = 1;
    public int type;

    // optional string user_name = 2;
    public java.lang.String userName;

    // optional int64 conv_id = 3;
    public long convId;

    // optional string conv_name = 4;
    public java.lang.String convName;

    // optional string body = 5;
    public java.lang.String body;

    public Notification() {
      clear();
    }

    public Notification clear() {
      type = com.github.mcilloni.uplink.nano.UplinkProto.Notification.MESSAGE;
      userName = "";
      convId = 0L;
      convName = "";
      body = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.type != com.github.mcilloni.uplink.nano.UplinkProto.Notification.MESSAGE) {
        output.writeInt32(1, this.type);
      }
      if (!this.userName.equals("")) {
        output.writeString(2, this.userName);
      }
      if (this.convId != 0L) {
        output.writeInt64(3, this.convId);
      }
      if (!this.convName.equals("")) {
        output.writeString(4, this.convName);
      }
      if (!this.body.equals("")) {
        output.writeString(5, this.body);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.type != com.github.mcilloni.uplink.nano.UplinkProto.Notification.MESSAGE) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.type);
      }
      if (!this.userName.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.userName);
      }
      if (this.convId != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(3, this.convId);
      }
      if (!this.convName.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.convName);
      }
      if (!this.body.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.body);
      }
      return size;
    }

    @Override
    public Notification mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case com.github.mcilloni.uplink.nano.UplinkProto.Notification.MESSAGE:
              case com.github.mcilloni.uplink.nano.UplinkProto.Notification.FRIENDSHIP_REQ:
              case com.github.mcilloni.uplink.nano.UplinkProto.Notification.FRIENDSHIP_ACC:
              case com.github.mcilloni.uplink.nano.UplinkProto.Notification.JOIN_REQ:
              case com.github.mcilloni.uplink.nano.UplinkProto.Notification.JOIN_ACC:
              case com.github.mcilloni.uplink.nano.UplinkProto.Notification.HANDLER_READY:
                this.type = value;
                break;
            }
            break;
          }
          case 18: {
            this.userName = input.readString();
            break;
          }
          case 24: {
            this.convId = input.readInt64();
            break;
          }
          case 34: {
            this.convName = input.readString();
            break;
          }
          case 42: {
            this.body = input.readString();
            break;
          }
        }
      }
    }

    public static Notification parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Notification(), data);
    }

    public static Notification parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Notification().mergeFrom(input);
    }
  }

  public static final class FriendList extends
      com.google.protobuf.nano.MessageNano {

    private static volatile FriendList[] _emptyArray;
    public static FriendList[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new FriendList[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated string friends = 1;
    public java.lang.String[] friends;

    public FriendList() {
      clear();
    }

    public FriendList clear() {
      friends = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.friends != null && this.friends.length > 0) {
        for (int i = 0; i < this.friends.length; i++) {
          java.lang.String element = this.friends[i];
          if (element != null) {
            output.writeString(1, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.friends != null && this.friends.length > 0) {
        int dataCount = 0;
        int dataSize = 0;
        for (int i = 0; i < this.friends.length; i++) {
          java.lang.String element = this.friends[i];
          if (element != null) {
            dataCount++;
            dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSizeNoTag(element);
          }
        }
        size += dataSize;
        size += 1 * dataCount;
      }
      return size;
    }

    @Override
    public FriendList mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.friends == null ? 0 : this.friends.length;
            java.lang.String[] newArray = new java.lang.String[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.friends, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readString();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readString();
            this.friends = newArray;
            break;
          }
        }
      }
    }

    public static FriendList parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new FriendList(), data);
    }

    public static FriendList parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new FriendList().mergeFrom(input);
    }
  }

  public static final class ConversationList extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ConversationList[] _emptyArray;
    public static ConversationList[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ConversationList[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .protodef.Conversation convs = 1;
    public com.github.mcilloni.uplink.nano.UplinkProto.Conversation[] convs;

    public ConversationList() {
      clear();
    }

    public ConversationList clear() {
      convs = com.github.mcilloni.uplink.nano.UplinkProto.Conversation.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.convs != null && this.convs.length > 0) {
        for (int i = 0; i < this.convs.length; i++) {
          com.github.mcilloni.uplink.nano.UplinkProto.Conversation element = this.convs[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.convs != null && this.convs.length > 0) {
        for (int i = 0; i < this.convs.length; i++) {
          com.github.mcilloni.uplink.nano.UplinkProto.Conversation element = this.convs[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      return size;
    }

    @Override
    public ConversationList mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.convs == null ? 0 : this.convs.length;
            com.github.mcilloni.uplink.nano.UplinkProto.Conversation[] newArray =
                new com.github.mcilloni.uplink.nano.UplinkProto.Conversation[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.convs, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.github.mcilloni.uplink.nano.UplinkProto.Conversation();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.github.mcilloni.uplink.nano.UplinkProto.Conversation();
            input.readMessage(newArray[i]);
            this.convs = newArray;
            break;
          }
        }
      }
    }

    public static ConversationList parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ConversationList(), data);
    }

    public static ConversationList parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ConversationList().mergeFrom(input);
    }
  }

  public static final class Conversation extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Conversation[] _emptyArray;
    public static Conversation[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Conversation[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional int64 id = 1;
    public long id;

    // optional string name = 2;
    public java.lang.String name;

    public Conversation() {
      clear();
    }

    public Conversation clear() {
      id = 0L;
      name = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.id != 0L) {
        output.writeInt64(1, this.id);
      }
      if (!this.name.equals("")) {
        output.writeString(2, this.name);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.id != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(1, this.id);
      }
      if (!this.name.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.name);
      }
      return size;
    }

    @Override
    public Conversation mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.id = input.readInt64();
            break;
          }
          case 18: {
            this.name = input.readString();
            break;
          }
        }
      }
    }

    public static Conversation parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Conversation(), data);
    }

    public static Conversation parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Conversation().mergeFrom(input);
    }
  }

  public static final class InviteList extends
      com.google.protobuf.nano.MessageNano {

    private static volatile InviteList[] _emptyArray;
    public static InviteList[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new InviteList[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .protodef.Invite invites = 1;
    public com.github.mcilloni.uplink.nano.UplinkProto.Invite[] invites;

    public InviteList() {
      clear();
    }

    public InviteList clear() {
      invites = com.github.mcilloni.uplink.nano.UplinkProto.Invite.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.invites != null && this.invites.length > 0) {
        for (int i = 0; i < this.invites.length; i++) {
          com.github.mcilloni.uplink.nano.UplinkProto.Invite element = this.invites[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.invites != null && this.invites.length > 0) {
        for (int i = 0; i < this.invites.length; i++) {
          com.github.mcilloni.uplink.nano.UplinkProto.Invite element = this.invites[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      return size;
    }

    @Override
    public InviteList mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.invites == null ? 0 : this.invites.length;
            com.github.mcilloni.uplink.nano.UplinkProto.Invite[] newArray =
                new com.github.mcilloni.uplink.nano.UplinkProto.Invite[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.invites, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new com.github.mcilloni.uplink.nano.UplinkProto.Invite();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new com.github.mcilloni.uplink.nano.UplinkProto.Invite();
            input.readMessage(newArray[i]);
            this.invites = newArray;
            break;
          }
        }
      }
    }

    public static InviteList parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new InviteList(), data);
    }

    public static InviteList parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new InviteList().mergeFrom(input);
    }
  }

  public static final class Invite extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Invite[] _emptyArray;
    public static Invite[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Invite[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string who = 1;
    public java.lang.String who;

    // optional int64 conv_id = 2;
    public long convId;

    // optional string conv_name = 3;
    public java.lang.String convName;

    public Invite() {
      clear();
    }

    public Invite clear() {
      who = "";
      convId = 0L;
      convName = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.who.equals("")) {
        output.writeString(1, this.who);
      }
      if (this.convId != 0L) {
        output.writeInt64(2, this.convId);
      }
      if (!this.convName.equals("")) {
        output.writeString(3, this.convName);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.who.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.who);
      }
      if (this.convId != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(2, this.convId);
      }
      if (!this.convName.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.convName);
      }
      return size;
    }

    @Override
    public Invite mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.who = input.readString();
            break;
          }
          case 16: {
            this.convId = input.readInt64();
            break;
          }
          case 26: {
            this.convName = input.readString();
            break;
          }
        }
      }
    }

    public static Invite parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Invite(), data);
    }

    public static Invite parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Invite().mergeFrom(input);
    }
  }
}
